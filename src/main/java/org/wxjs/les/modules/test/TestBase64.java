package org.wxjs.les.modules.test;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import org.apache.commons.codec.binary.Base64;
import org.wxjs.les.common.utils.IdGen;

public class TestBase64 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		base64StringToImage("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");
	}
	
    static String base64StringToImage(String base64String) {
    	String filename = "d:/temp/"+IdGen.uuid()+".png";
        try {
        	
            byte[] bytes1 = Base64.decodeBase64(base64String);
            ByteArrayInputStream bais = new ByteArrayInputStream(bytes1);
            BufferedImage bi1 = ImageIO.read(bais);
            File f1 = new File(filename);
            ImageIO.write(bi1, "png", f1);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return filename;
    }

}
